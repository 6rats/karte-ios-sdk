// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2 (swiftlang-1103.0.32.1 clang-1103.0.32.29)
// swift-module-flags: -target i386-apple-ios8.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name KarteDetectors
import Foundation
@_exported import KarteDetectors
import Swift
import UIKit
public struct RemoteViewDetector {
  public static func detect(lessThanWindowLevel windowLevel: UIKit.UIWindow.Level, scenePersistentIdentifier: Swift.String? = nil) -> Swift.Bool
  public static func detect(_ viewController: UIKit.UIViewController, lessThanWindowLevel windowLevel: UIKit.UIWindow.Level) -> Swift.Bool
}
public struct WindowDetector {
  public static func retrieveRelatedWindows(view: UIKit.UIView) -> [UIKit.UIWindow]
  public static func retrieveRelatedWindows(from persistentIdentifier: Swift.String? = nil) -> [UIKit.UIWindow]
}
public struct OpacityDetector {
  public init()
  public mutating func detectAtPoint(_ point: CoreGraphics.CGPoint, view: UIKit.UIView, event: UIKit.UIEvent?) -> Swift.Bool
}
extension OpacityDetector {
  public struct Cache {
    public func isExpired(event: UIKit.UIEvent?) -> Swift.Bool
  }
}
public struct WindowSceneDetector {
  public static func retrievePersistentIdentifiers() -> [Swift.String]?
  public static func retrievePersistentIdentifier(view: UIKit.UIView?) -> Swift.String?
  @available(iOS 13.0, *)
  public static func retrieveWindowScene(from persistentIdentifier: Swift.String? = nil) -> UIKit.UIWindowScene?
}
